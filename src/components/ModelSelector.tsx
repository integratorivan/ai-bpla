import type { ModelState } from '../types/ml5'
import { YOLOV8_MODELS } from '../constants'

interface ModelSelectorProps {
  modelState: ModelState
  onSwitchModel: (modelType: 'coco-ssd' | 'yolov8', modelUrl?: string, yolov8Variant?: keyof typeof YOLOV8_MODELS) => void
}

export function ModelSelector({ modelState, onSwitchModel }: ModelSelectorProps) {
  const handleModelChange = (e: Event) => {
    const target = e.target as HTMLSelectElement
    const value = target.value
    
    if (value === 'coco-ssd') {
      onSwitchModel('coco-ssd')
    } else if (value.startsWith('yolov8-')) {
      const variant = value.replace('yolov8-', '') as keyof typeof YOLOV8_MODELS
      onSwitchModel('yolov8', undefined, variant)
    }
  }

  const getCurrentValue = () => {
    if (modelState.modelType === 'coco-ssd') {
      return 'coco-ssd'
    } else if (modelState.modelType === 'yolov8' && modelState.modelInfo?.variant) {
      return `yolov8-${modelState.modelInfo.variant}`
    }
    return 'coco-ssd'
  }

  return (
    <div className="model-options">
      <div className="model-select">
        <label htmlFor="model-selector">ü§ñ –ú–æ–¥–µ–ª—å:</label>
        <select 
          id="model-selector" 
          value={getCurrentValue()} 
          onChange={handleModelChange}
        >
          <option value="coco-ssd">üéØ COCO-SSD - –î–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤</option>
          <optgroup label="üîç YOLOv8 - –î–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤">
            {Object.entries(YOLOV8_MODELS).map(([variant, config]) => (
              <option key={variant} value={`yolov8-${variant}`}>
                üöÄ {config.name} ({config.size})
              </option>
            ))}
          </optgroup>
        </select>
      </div>

      <div className="model-info">
        <div className="model-status">
          <span className={modelState.loaded ? 'status-loaded' : 'status-loading'}>
            {modelState.loaded ? '‚úÖ' : '‚è≥'}
          </span>
          <span>
            {modelState.loaded ? '–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞' : '–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...'}
          </span>
        </div>

        <div className="model-description">
          {modelState.modelType === 'coco-ssd' ? (
            <p>
              <strong>COCO-SSD</strong> - –±—ã—Å—Ç—Ä–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
            </p>
          ) : modelState.modelType === 'yolov8' ? (
            <p>
              <strong>YOLOv8</strong> - —Ç–æ—á–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
              {modelState.modelInfo && (
                <span className="model-variant">
                  <br />üìä {modelState.modelInfo.name} - {modelState.modelInfo.size}
                  {modelState.modelInfo.accuracy && `, ${modelState.modelInfo.accuracy} —Ç–æ—á–Ω–æ—Å—Ç—å`}
                </span>
              )}
            </p>
          ) : (
            <p>
              <strong>–ú–æ–¥–µ–ª—å</strong> - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
            </p>
          )}
        </div>
      </div>
    </div>
  )
} 