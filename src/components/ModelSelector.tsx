import type { ModelState } from '../types/ml5'

interface ModelSelectorProps {
  modelState: ModelState
  onSwitchModel: (modelType: 'mobilenet' | 'yolo' | 'coco-ssd', modelUrl?: string) => void
  disabled: boolean
}

export function ModelSelector({ modelState, onSwitchModel, disabled }: ModelSelectorProps) {
  const handleModelChange = (event: Event) => {
    const target = event.target as HTMLSelectElement
    const modelType = target.value as 'mobilenet' | 'yolo' | 'coco-ssd'
    onSwitchModel(modelType)
  }

  const handleCustomYOLOUrl = () => {
    const url = prompt('–í–≤–µ–¥–∏—Ç–µ URL YOLO –º–æ–¥–µ–ª–∏ (model.json):')
    if (url) {
      onSwitchModel('yolo', url)
    }
  }

  return (
    <div class="model-selector">
      <h3>ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò</h3>
      
      <div class="model-options">
        <select 
          value={modelState.modelType} 
          onChange={handleModelChange}
          disabled={disabled}
          class="model-select"
        >
          <option value="mobilenet">üì± MobileNet (–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è)</option>
          <option value="coco-ssd">üéØ COCO-SSD (–î–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤) - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è</option>
          <option value="yolo">‚ö° YOLO (–î–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤) - –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ</option>
        </select>

        {modelState.modelType === 'yolo' && (
          <button 
            onClick={handleCustomYOLOUrl}
            disabled={disabled}
            class="custom-model-btn"
            type="button"
          >
            üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—é YOLO –º–æ–¥–µ–ª—å
          </button>
        )}
      </div>

      <div class="model-info">
        <div class={`status-indicator ${modelState.loaded ? 'loaded' : 'loading'}`}>
          {modelState.loaded ? '‚úÖ' : '‚è≥'}
        </div>
        
        <div class="model-description">
          {modelState.modelType === 'mobilenet' ? (
            <div>
              <strong>MobileNet</strong> - –±—ã—Å—Ç—Ä–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
              <br />
              <small>üîç –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏</small>
            </div>
          ) : modelState.modelType === 'coco-ssd' ? (
            <div>
              <strong>COCO-SSD</strong> - –Ω–∞–¥–µ–∂–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç Google
              <br />
              <small>üéØ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å TensorFlow.js –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ 90 –∫–ª–∞—Å—Å–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤</small>
            </div>
          ) : (
            <div>
              <strong>YOLO</strong> - —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤  
              <br />
              <small>‚ö° –ë—ã—Å—Ç—Ä–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –º–æ–¥–µ–ª—å</small>
            </div>
          )}
        </div>
      </div>

      {modelState.tensorflowModel && (
        <div class="model-details">
          <h4>üìä –î–µ—Ç–∞–ª–∏ –º–æ–¥–µ–ª–∏:</h4>
          <div class="model-specs">
            <div>–í—Ö–æ–¥–Ω–æ–π —Ä–∞–∑–º–µ—Ä: {modelState.tensorflowModel.inputShape.join(' √ó ')}</div>
            <div>–í—ã—Ö–æ–¥–Ω–æ–π —Ä–∞–∑–º–µ—Ä: {modelState.tensorflowModel.outputShape.join(' √ó ')}</div>
            <div>–¢–∏–ø: {modelState.tensorflowModel.modelType === 'detection' ? '–î–µ—Ç–µ–∫—Ü–∏—è' : '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è'}</div>
          </div>
        </div>
      )}
    </div>
  )
} 