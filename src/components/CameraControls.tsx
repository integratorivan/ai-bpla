import type { CameraState } from '../types/ml5'

interface CameraControlsProps {
  cameraState: CameraState
  modelLoaded: boolean
  onRequestPermission: () => void
  onEnableCamera: () => void
  onDisableCamera: () => void
  onSelectDevice: (deviceId: string) => void
  onRefreshDevices: () => void
}

export function CameraControls({ 
  cameraState, 
  modelLoaded, 
  onRequestPermission, 
  onEnableCamera, 
  onDisableCamera,
  onSelectDevice,
  onRefreshDevices
}: CameraControlsProps) {
  if (cameraState.permissionGranted === null) {
    return (
      <div className="camera-controls">
        <button 
          onClick={onRequestPermission}
          disabled={!modelLoaded}
          className="btn-primary"
        >
          üìã –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ
        </button>
        <p className="text-sm text-gray-600 mt-2">
          üí° –ï—Å–ª–∏ —É –≤–∞—Å iPhone —Ä—è–¥–æ–º —Å Mac, –≤–∫–ª—é—á–∏—Ç–µ Continuity Camera –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        </p>
      </div>
    )
  }

  if (cameraState.permissionGranted === false) {
    return (
      <div className="camera-controls">
        <p>‚ùå –î–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω</p>
        <button onClick={onRequestPermission} className="btn-primary">
          üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å
        </button>
      </div>
    )
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –µ—Å–ª–∏ –∫–∞–º–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞
  if (!cameraState.enabled) {
    return (
      <div className="camera-controls">
        {/* –°–µ–ª–µ–∫—Ç–æ—Ä –≤–∏–¥–µ–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
        {cameraState.devices.length > 0 && (
          <div className="device-selector mb-4">
            <label className="block text-sm font-medium mb-2">
              üìπ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–µ—Ä—É:
            </label>
            <div className="flex gap-2 items-center">
              <select 
                value={cameraState.selectedDeviceId || ''} 
                onChange={(e) => onSelectDevice((e.target as HTMLSelectElement).value)}
                className="flex-1 p-2 border rounded"
                disabled={cameraState.isLoadingDevices}
              >
                {cameraState.devices.map(device => (
                  <option key={device.deviceId} value={device.deviceId}>
                    {device.isContinuityCamera && 'üì± '}
                    {device.isIPhone && !device.isContinuityCamera && 'üì± '}
                    {device.label}
                    {device.isContinuityCamera && ' (Continuity Camera)'}
                    {device.isIPhone && !device.isContinuityCamera && ' (iPhone)'}
                  </option>
                ))}
              </select>
              <button 
                onClick={onRefreshDevices}
                className="btn-secondary"
                disabled={cameraState.isLoadingDevices}
                title="–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤"
              >
                {cameraState.isLoadingDevices ? '‚è≥' : 'üîÑ'}
              </button>
            </div>
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ */}
            {cameraState.selectedDeviceId && (
              <div className="mt-3 p-3 bg-gray-50 rounded text-sm">
                {(() => {
                  const selectedDevice = cameraState.devices.find(d => d.deviceId === cameraState.selectedDeviceId)
                  if (!selectedDevice) return null
                  
                  if (selectedDevice.isContinuityCamera) {
                    return (
                      <div className="text-blue-600">
                        üì± <strong>Continuity Camera –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!</strong><br/>
                        –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∫–∞–º–µ—Ä–∞ iPhone —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º (–¥–æ 1080p)
                      </div>
                    )
                  }
                  
                  if (selectedDevice.isIPhone) {
                    return (
                      <div className="text-blue-600">
                        üì± <strong>iPhone –∫–∞–º–µ—Ä–∞ –≤—ã–±—Ä–∞–Ω–∞!</strong><br/>
                        –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
                      </div>
                    )
                  }
                  
                  return (
                    <div className="text-gray-600">
                      üìπ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–∞–º–µ—Ä–∞: {selectedDevice.label}
                    </div>
                  )
                })()}
              </div>
            )}
          </div>
        )}

        <button 
          onClick={onEnableCamera} 
          disabled={!modelLoaded || !cameraState.selectedDeviceId}
          className="btn-primary"
        >
          üé• –í–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É
          {cameraState.devices.find(d => d.deviceId === cameraState.selectedDeviceId)?.isIPhone && ' (iPhone)'}
        </button>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Continuity Camera */}
        {cameraState.devices.length > 0 && !cameraState.devices.some(d => d.isIPhone) && (
          <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded text-sm">
            <strong>üí° –ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å iPhone –∫–∞–º–µ—Ä—É:</strong>
            <ol className="mt-2 ml-4 list-decimal space-y-1">
              <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ iPhone –∏ Mac –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –æ–¥–Ω–æ–π Apple ID</li>
              <li>–í–∫–ª—é—á–∏—Ç–µ WiFi –∏ Bluetooth –Ω–∞ –æ–±–æ–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
              <li>–ù–∞ iPhone: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –û—Å–Ω–æ–≤–Ω—ã–µ ‚Üí AirPlay –∏ Handoff ‚Üí Continuity Camera</li>
              <li>–ù–∞ Mac –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å iPhone –∫–∞–∫ –≤–µ–±-–∫–∞–º–µ—Ä—É</li>
              <li>–ù–∞–∂–º–∏—Ç–µ üîÑ —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤</li>
            </ol>
          </div>
        )}
      </div>
    )
  }

  // –ö–∞–º–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  return (
    <div className="camera-controls">
      <button 
        onClick={onDisableCamera}
        className="btn-secondary"
      >
        ‚èπÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É
      </button>
      
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞–º–µ—Ä–µ */}
      {cameraState.selectedDeviceId && (
        <div className="mt-2 text-sm text-gray-600">
          {(() => {
            const activeDevice = cameraState.devices.find(d => d.deviceId === cameraState.selectedDeviceId)
            if (!activeDevice) return '–ê–∫—Ç–∏–≤–Ω–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–µ—Ä–∞'
            
            if (activeDevice.isContinuityCamera) {
              return 'üì± –ê–∫—Ç–∏–≤–Ω–∞: iPhone (Continuity Camera)'
            }
            
            if (activeDevice.isIPhone) {
              return `üì± –ê–∫—Ç–∏–≤–Ω–∞: ${activeDevice.label}`
            }
            
            return `üìπ –ê–∫—Ç–∏–≤–Ω–∞: ${activeDevice.label}`
          })()}
        </div>
      )}
    </div>
  )
} 