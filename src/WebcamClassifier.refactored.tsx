import { useRef } from 'preact/hooks'

// –•—É–∫–∏
import { useModel, useCamera, useStream, usePredictions, useAutoClassification } from './hooks'

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { 
  ModelStatus, 
  StreamControls, 
  CameraControls, 
  VideoDisplay, 
  PredictionsDisplay 
} from './components'

export function WebcamClassifier() {
  // –†–µ—Ñ—ã –¥–ª—è DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const videoRef = useRef<HTMLVideoElement>(null)
  const canvasRef = useRef<HTMLCanvasElement>(null)
  
  // –•—É–∫–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const model = useModel()
  const camera = useCamera()
  const stream = useStream()
  const predictions = usePredictions()

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
  const handleClassifyFrame = async () => {
    await predictions.classifyFrame(
      model.classifier,
      videoRef,
      canvasRef,
      camera.cameraState.enabled || stream.streamState.isStreamMode
    )
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
  useAutoClassification(
    camera.cameraState.enabled || stream.streamState.isStreamMode,
    model.loaded,
    handleClassifyFrame
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞–º–µ—Ä—ã
  const handleEnableCamera = async () => {
    await camera.enableCamera(videoRef)
    if (stream.streamState.isStreamMode) {
      stream.stopStream(videoRef)
    }
    predictions.clearPredictions()
  }

  const handleDisableCamera = () => {
    camera.disableCamera()
    predictions.clearPredictions()
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å—Ç—Ä–∏–º–∞
  const handleLoadStream = () => {
    stream.loadStream(videoRef)
    if (camera.cameraState.enabled) {
      camera.disableCamera()
    }
    predictions.clearPredictions()
  }

  const handleStopStream = () => {
    stream.stopStream(videoRef)
    predictions.clearPredictions()
  }

  return (
    <div className="webcam-classifier">
      <h2>üì∏ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤–µ–±-–∫–∞–º–µ—Ä—É –∏–ª–∏ —Å—Ç—Ä–∏–º</h2>
      
      {/* –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–∏ */}
      <ModelStatus modelLoaded={model.loaded} />

      {/* –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤–∏–¥–µ–æ */}
      <div className="source-selector">
        <h3>–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–∏–¥–µ–æ:</h3>
        
        {/* –°—Ç—Ä–∏–º URL */}
        <StreamControls
          streamState={stream.streamState}
          modelLoaded={model.loaded}
          onUrlChange={stream.setUrl}
          onLoadStream={handleLoadStream}
          onStopStream={handleStopStream}
        />
        
        <div className="separator">–∏–ª–∏</div>
      </div>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–µ—Ä–æ–π */}
      <div className="camera-controls">
        <CameraControls
          cameraState={camera.cameraState}
          modelLoaded={model.loaded}
          onRequestPermission={camera.requestPermission}
          onEnableCamera={handleEnableCamera}
          onDisableCamera={handleDisableCamera}
        />
      </div>

      {/* –í–∏–¥–µ–æ —Å –∫–∞–º–µ—Ä—ã */}
      <VideoDisplay
        cameraEnabled={camera.cameraState.enabled || stream.streamState.isStreamMode}
        isAnalyzing={predictions.analysisState.isAnalyzing}
        modelLoaded={model.loaded}
        onClassifyFrame={handleClassifyFrame}
        videoRef={videoRef}
        canvasRef={canvasRef}
      />

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
      <PredictionsDisplay predictions={predictions.analysisState.predictions} />
    </div>
  )
} 